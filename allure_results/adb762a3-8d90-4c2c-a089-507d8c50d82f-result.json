{"name": "Проверка увеличения значения счётчика 'Выполнено за сегодня' на экране 'Лента заказов'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=132.0.6834.110)\nStacktrace:\n\tGetHandleVerifier [0x00007FF64440CC05+28741]\n\t(No symbol) [0x00007FF64436FED0]\n\t(No symbol) [0x00007FF644204FBA]\n\t(No symbol) [0x00007FF6441DED55]\n\t(No symbol) [0x00007FF644286DE7]\n\t(No symbol) [0x00007FF64429F8B2]\n\t(No symbol) [0x00007FF64427FBD3]\n\t(No symbol) [0x00007FF644249F43]\n\t(No symbol) [0x00007FF64424B2D1]\n\tGetHandleVerifier [0x00007FF64473DE3D+3375741]\n\tGetHandleVerifier [0x00007FF64475096A+3452330]\n\tGetHandleVerifier [0x00007FF64474671D+3410781]\n\tGetHandleVerifier [0x00007FF6444D653B+854395]\n\t(No symbol) [0x00007FF64437BE0F]\n\t(No symbol) [0x00007FF644377714]\n\t(No symbol) [0x00007FF6443778AD]\n\t(No symbol) [0x00007FF644366189]\n\tBaseThreadInitThunk [0x00007FFA81657374+20]\n\tRtlUserThreadStart [0x00007FFA81D3CC91+33]", "trace": "self = <tests.test_order_page.TestOrderPage object at 0x000001E79E599A90>\ndefault_user = {'access_token': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTYxMTg5OWVkMjgwMDAxYjU1YjU0OSIsImlhdCI6MTcz...ata': {'email': 'qxngk@myandex.ru', 'name': 'ehhcaodelv', 'password': 'mkfvbjcfzz'}, 'user_response': <Response [200]>}\nmain_page = <pages.main_page.MainPage object at 0x000001E79E5F7920>\norder_page = <pages.order_page.OrderPage object at 0x000001E79E5F70E0>\npersonal_account_page = <pages.personal_account_page.PersonalAccountPage object at 0x000001E79E5F5970>\n\n    @allure.title(\"Проверка увеличения значения счётчика 'Выполнено за сегодня' на экране 'Лента заказов'\")\n    @allure.description(\n        \"Создаём заказ и проверяем что счётчик выполненных заказов за сегодня, на экране 'Лента заказов', увеличивается на 1\")\n    def test_order_counter_today_increases_when_new_order_is_placed_success(self, default_user, main_page, order_page, personal_account_page):\n        # Создаём и авторизуем нового пользователя\n        user_data = default_user ['user_data']\n>       main_page.open()\n\ntests\\test_order_page.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:11: in open\n    self.open_page(Urls.BASE_URL)\npages\\base_page.py:25: in open_page\n    self.driver.get(url)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:393: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E79E5F6DE0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF644366189]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA81657374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFA81D3CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=132.0.6834.110)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF64440CC05+28741]\nE       \t(No symbol) [0x00007FF64436FED0]\nE       \t(No symbol) [0x00007FF644204FBA]\nE       \t(No symbol) [0x00007FF6441DED55]\nE       \t(No symbol) [0x00007FF644286DE7]\nE       \t(No symbol) [0x00007FF64429F8B2]\nE       \t(No symbol) [0x00007FF64427FBD3]\nE       \t(No symbol) [0x00007FF644249F43]\nE       \t(No symbol) [0x00007FF64424B2D1]\nE       \tGetHandleVerifier [0x00007FF64473DE3D+3375741]\nE       \tGetHandleVerifier [0x00007FF64475096A+3452330]\nE       \tGetHandleVerifier [0x00007FF64474671D+3410781]\nE       \tGetHandleVerifier [0x00007FF6444D653B+854395]\nE       \t(No symbol) [0x00007FF64437BE0F]\nE       \t(No symbol) [0x00007FF644377714]\nE       \t(No symbol) [0x00007FF6443778AD]\nE       \t(No symbol) [0x00007FF644366189]\nE       \tBaseThreadInitThunk [0x00007FFA81657374+20]\nE       \tRtlUserThreadStart [0x00007FFA81D3CC91+33]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException"}, "description": "Создаём заказ и проверяем что счётчик выполненных заказов за сегодня, на экране 'Лента заказов', увеличивается на 1", "steps": [{"name": "Открытие в браузере страницы 'Stellar Burger'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=132.0.6834.110)\nStacktrace:\n\tGetHandleVerifier [0x00007FF64440CC05+28741]\n\t(No symbol) [0x00007FF64436FED0]\n\t(No symbol) [0x00007FF644204FBA]\n\t(No symbol) [0x00007FF6441DED55]\n\t(No symbol) [0x00007FF644286DE7]\n\t(No symbol) [0x00007FF64429F8B2]\n\t(No symbol) [0x00007FF64427FBD3]\n\t(No symbol) [0x00007FF644249F43]\n\t(No symbol) [0x00007FF64424B2D1]\n\tGetHandleVerifier [0x00007FF64473DE3D+3375741]\n\tGetHandleVerifier [0x00007FF64475096A+3452330]\n\tGetHandleVerifier [0x00007FF64474671D+3410781]\n\tGetHandleVerifier [0x00007FF6444D653B+854395]\n\t(No symbol) [0x00007FF64437BE0F]\n\t(No symbol) [0x00007FF644377714]\n\t(No symbol) [0x00007FF6443778AD]\n\t(No symbol) [0x00007FF644366189]\n\tBaseThreadInitThunk [0x00007FFA81657374+20]\n\tRtlUserThreadStart [0x00007FFA81D3CC91+33]\n\n", "trace": "  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\Diplom3\\pages\\main_page.py\", line 11, in open\n    self.open_page(Urls.BASE_URL)\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\Diplom3\\pages\\base_page.py\", line 25, in open_page\n    self.driver.get(url)\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 393, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1737888143372, "stop": 1737888143374}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1737888143372, "stop": 1737888143377, "uuid": "12b44cee-cf1d-4193-9095-d4d6121a06e8", "historyId": "d5c013fa9a9425f0c5b1979ec37f6102", "testCaseId": "3083110c1b47ab3f3a44f4c3e8dd7f41", "fullName": "tests.test_order_page.TestOrderPage#test_order_counter_today_increases_when_new_order_is_placed_success", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_page"}, {"name": "subSuite", "value": "TestOrderPage"}, {"name": "host", "value": "01ms32"}, {"name": "thread", "value": "14304-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_page"}]}