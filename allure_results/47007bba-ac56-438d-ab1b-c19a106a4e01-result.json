{"name": "Проверка успешного открытия личного кабинета авторизованного пользователя", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=132.0.6834.83)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7036FFBE5+28741]\n\t(No symbol) [0x00007FF703667890]\n\t(No symbol) [0x00007FF703504FDA]\n\t(No symbol) [0x00007FF7034DED45]\n\t(No symbol) [0x00007FF703586EC7]\n\t(No symbol) [0x00007FF70359F982]\n\t(No symbol) [0x00007FF70357FCB3]\n\t(No symbol) [0x00007FF703549FB3]\n\t(No symbol) [0x00007FF70354B331]\n\tGetHandleVerifier [0x00007FF703A3A73D+3414941]\n\tGetHandleVerifier [0x00007FF703A4E64A+3496618]\n\tGetHandleVerifier [0x00007FF703A4413D+3454365]\n\tGetHandleVerifier [0x00007FF7037C848B+850155]\n\t(No symbol) [0x00007FF7036737FF]\n\t(No symbol) [0x00007FF70366F0C4]\n\t(No symbol) [0x00007FF70366F25D]\n\t(No symbol) [0x00007FF70365E079]\n\tBaseThreadInitThunk [0x00007FFA81657374+20]\n\tRtlUserThreadStart [0x00007FFA81D3CC91+33]", "trace": "self = <tests.test_personal_account_page.TestPersonalAccountPage object at 0x000001BC53173F20>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"03356bc508e882bd31d72c01b380f397\")>\n\n    @allure.title(\"Проверка успешного открытия личного кабинета авторизованного пользователя\")\n    @allure.description(\"Проверка перехода в 'Личный кабинет' кликом по кнопке 'Личный кабинет' на главной странице\")\n    def test_open_personal_account_success(self, driver):\n        user_data = stellar_burgers_api.create_user_body()\n        user_response = stellar_burgers_api.create_user(user_data)\n        main_page = MainPage(driver)\n        main_page.open()\n        email = main_page.get_user_email(user_data)\n        password = main_page.get_user_password(user_data)\n        main_page.click_account_button()\n        personal_account_page = PersonalAccountPage(driver)\n>       personal_account_page.set_email(email)\n\ntests\\test_personal_account_page.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\personal_account_page.py:10: in set_email\n    input_email = self.wait_and_find_element(PersonalAccountLocators.FIELD_EMAIL)\npages\\base_page.py:11: in wait_and_find_element\n    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located(locator))\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001BC5153A750>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF70365E079]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA81657374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFA81D3CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=132.0.6834.83)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7036FFBE5+28741]\nE       \t(No symbol) [0x00007FF703667890]\nE       \t(No symbol) [0x00007FF703504FDA]\nE       \t(No symbol) [0x00007FF7034DED45]\nE       \t(No symbol) [0x00007FF703586EC7]\nE       \t(No symbol) [0x00007FF70359F982]\nE       \t(No symbol) [0x00007FF70357FCB3]\nE       \t(No symbol) [0x00007FF703549FB3]\nE       \t(No symbol) [0x00007FF70354B331]\nE       \tGetHandleVerifier [0x00007FF703A3A73D+3414941]\nE       \tGetHandleVerifier [0x00007FF703A4E64A+3496618]\nE       \tGetHandleVerifier [0x00007FF703A4413D+3454365]\nE       \tGetHandleVerifier [0x00007FF7037C848B+850155]\nE       \t(No symbol) [0x00007FF7036737FF]\nE       \t(No symbol) [0x00007FF70366F0C4]\nE       \t(No symbol) [0x00007FF70366F25D]\nE       \t(No symbol) [0x00007FF70365E079]\nE       \tBaseThreadInitThunk [0x00007FFA81657374+20]\nE       \tRtlUserThreadStart [0x00007FFA81D3CC91+33]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException"}, "description": "Проверка перехода в 'Личный кабинет' кликом по кнопке 'Личный кабинет' на главной странице", "steps": [{"name": "Создание тела запроса создания юзера: email, password, name", "status": "passed", "start": 1737449806323, "stop": 1737449806323}, {"name": "Создание пользователя в приложении Stellar burger", "status": "passed", "parameters": [{"name": "user_data", "value": "{'email': 'ytmns@myandex.ru', 'password': 'bmnpumwzez', 'name': 'uqqylwbzmq'}"}], "start": 1737449806324, "stop": 1737449806567}, {"name": "Открытие в браузере страницы 'Stellar Burger'", "status": "passed", "start": 1737449806568, "stop": 1737449808453}, {"name": "Получение эмейла для авторизации из сгенерированных данных", "status": "passed", "parameters": [{"name": "user_response", "value": "{'email': 'ytmns@myandex.ru', 'password': 'bmnpumwzez', 'name': 'uqqylwbzmq'}"}], "start": 1737449808453, "stop": 1737449808453}, {"name": "Получение пароля для авторизации из сгенерированных данных", "status": "passed", "parameters": [{"name": "user_response", "value": "{'email': 'ytmns@myandex.ru', 'password': 'bmnpumwzez', 'name': 'uqqylwbzmq'}"}], "start": 1737449808453, "stop": 1737449808453}, {"name": "Клик по кнопке 'Личный кабинет' в шапке страницы", "status": "passed", "start": 1737449808453, "stop": 1737449808662}, {"name": "Ввод почты в поле email", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=132.0.6834.83)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7036FFBE5+28741]\n\t(No symbol) [0x00007FF703667890]\n\t(No symbol) [0x00007FF703504FDA]\n\t(No symbol) [0x00007FF7034DED45]\n\t(No symbol) [0x00007FF703586EC7]\n\t(No symbol) [0x00007FF70359F982]\n\t(No symbol) [0x00007FF70357FCB3]\n\t(No symbol) [0x00007FF703549FB3]\n\t(No symbol) [0x00007FF70354B331]\n\tGetHandleVerifier [0x00007FF703A3A73D+3414941]\n\tGetHandleVerifier [0x00007FF703A4E64A+3496618]\n\tGetHandleVerifier [0x00007FF703A4413D+3454365]\n\tGetHandleVerifier [0x00007FF7037C848B+850155]\n\t(No symbol) [0x00007FF7036737FF]\n\t(No symbol) [0x00007FF70366F0C4]\n\t(No symbol) [0x00007FF70366F25D]\n\t(No symbol) [0x00007FF70365E079]\n\tBaseThreadInitThunk [0x00007FFA81657374+20]\n\tRtlUserThreadStart [0x00007FFA81D3CC91+33]\n\n", "trace": "  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\Diplom3\\pages\\personal_account_page.py\", line 10, in set_email\n    input_email = self.wait_and_find_element(PersonalAccountLocators.FIELD_EMAIL)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\Diplom3\\pages\\base_page.py\", line 11, in wait_and_find_element\n    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located(locator))\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 156, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 770, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "email", "value": "'ytmns@myandex.ru'"}], "start": 1737449808663, "stop": 1737449808666}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1737449806323, "stop": 1737449808669, "uuid": "7565a46a-06ff-4f8d-a830-cb3e1ff98d70", "historyId": "2931030cbdf754665bd350cdb0cf766f", "testCaseId": "8ed6bf7a7ee0b689f5fe0a4dfa15c22d", "fullName": "tests.test_personal_account_page.TestPersonalAccountPage#test_open_personal_account_success", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_personal_account_page"}, {"name": "subSuite", "value": "TestPersonalAccountPage"}, {"name": "host", "value": "01ms32"}, {"name": "thread", "value": "9524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_personal_account_page"}]}