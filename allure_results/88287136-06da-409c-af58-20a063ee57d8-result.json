{"name": "Проверка успешного перехода в раздел 'История заказов'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression (//a[@class = 'AppHeader_header__link__3D_hX' and @href='/account'] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '(//a[@class = 'AppHeader_header__link__3D_hX' and @href='/account']' is not a valid XPath expression.\n  (Session info: chrome=132.0.6834.83); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF73D65CC05+28741]\n\t(No symbol) [0x00007FF73D5BFED0]\n\t(No symbol) [0x00007FF73D454FBA]\n\t(No symbol) [0x00007FF73D45BC0C]\n\t(No symbol) [0x00007FF73D45E95C]\n\t(No symbol) [0x00007FF73D45EA2F]\n\t(No symbol) [0x00007FF73D4A8B05]\n\t(No symbol) [0x00007FF73D4A948C]\n\t(No symbol) [0x00007FF73D4F3267]\n\t(No symbol) [0x00007FF73D4CFE6F]\n\t(No symbol) [0x00007FF73D4EFFE1]\n\t(No symbol) [0x00007FF73D4CFBD3]\n\t(No symbol) [0x00007FF73D499F43]\n\t(No symbol) [0x00007FF73D49B2D1]\n\tGetHandleVerifier [0x00007FF73D98DE3D+3375741]\n\tGetHandleVerifier [0x00007FF73D9A096A+3452330]\n\tGetHandleVerifier [0x00007FF73D99671D+3410781]\n\tGetHandleVerifier [0x00007FF73D72653B+854395]\n\t(No symbol) [0x00007FF73D5CBE0F]\n\t(No symbol) [0x00007FF73D5C7714]\n\t(No symbol) [0x00007FF73D5C78AD]\n\t(No symbol) [0x00007FF73D5B6189]\n\tBaseThreadInitThunk [0x00007FFA81657374+20]\n\tRtlUserThreadStart [0x00007FFA81D3CC91+33]", "trace": "self = <tests.test_personal_account_page.TestPersonalAccountPage object at 0x0000023515CF05F0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"be6f8e69333056b6db250cfbfcadb29e\")>\ndefault_user = {'access_token': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3OTE1OTY4OWVkMjgwMDAxYjU1ODVjZSIsImlhdCI6MTcz...ata': {'email': 'jharo@myandex.ru', 'name': 'xipqfszvwl', 'password': 'swcitsnshb'}, 'user_response': <Response [200]>}\n\n    @allure.title(\"Проверка успешного перехода в раздел 'История заказов'\")\n    @allure.description(\"Проверка успешного перехода в раздел 'История заказов' в личном кабинете авторизованного пользователя\")\n    def test_redirect_to_order_history_page_success(self, driver, default_user):\n        user_data = default_user ['user_data']\n        main_page = MainPage(driver)\n        main_page.open()\n        email = main_page.get_user_email(user_data)\n        password = main_page.get_user_password(user_data)\n>       main_page.click_account_button()\n\ntests\\test_personal_account_page.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\main_page.py:71: in click_account_button\n    account_button = self.wait_and_find_element(MainPageLocators.BUTTON_ACCOUNT)\npages\\base_page.py:11: in wait_and_find_element\n    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located(locator))\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023515CF0590>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...07FF73D5B6189]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA81657374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFA81D3CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression (//a[@class = 'AppHeader_header__link__3D_hX' and @href='/account'] because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '(//a[@class = 'AppHeader_header__link__3D_hX' and @href='/account']' is not a valid XPath expression.\nE         (Session info: chrome=132.0.6834.83); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF73D65CC05+28741]\nE       \t(No symbol) [0x00007FF73D5BFED0]\nE       \t(No symbol) [0x00007FF73D454FBA]\nE       \t(No symbol) [0x00007FF73D45BC0C]\nE       \t(No symbol) [0x00007FF73D45E95C]\nE       \t(No symbol) [0x00007FF73D45EA2F]\nE       \t(No symbol) [0x00007FF73D4A8B05]\nE       \t(No symbol) [0x00007FF73D4A948C]\nE       \t(No symbol) [0x00007FF73D4F3267]\nE       \t(No symbol) [0x00007FF73D4CFE6F]\nE       \t(No symbol) [0x00007FF73D4EFFE1]\nE       \t(No symbol) [0x00007FF73D4CFBD3]\nE       \t(No symbol) [0x00007FF73D499F43]\nE       \t(No symbol) [0x00007FF73D49B2D1]\nE       \tGetHandleVerifier [0x00007FF73D98DE3D+3375741]\nE       \tGetHandleVerifier [0x00007FF73D9A096A+3452330]\nE       \tGetHandleVerifier [0x00007FF73D99671D+3410781]\nE       \tGetHandleVerifier [0x00007FF73D72653B+854395]\nE       \t(No symbol) [0x00007FF73D5CBE0F]\nE       \t(No symbol) [0x00007FF73D5C7714]\nE       \t(No symbol) [0x00007FF73D5C78AD]\nE       \t(No symbol) [0x00007FF73D5B6189]\nE       \tBaseThreadInitThunk [0x00007FFA81657374+20]\nE       \tRtlUserThreadStart [0x00007FFA81D3CC91+33]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: InvalidSelectorException"}, "description": "Проверка успешного перехода в раздел 'История заказов' в личном кабинете авторизованного пользователя", "steps": [{"name": "Открытие в браузере страницы 'Stellar Burger'", "status": "passed", "start": 1737578857793, "stop": 1737578860020}, {"name": "Получение эмейла для авторизации из сгенерированных данных", "status": "passed", "parameters": [{"name": "user_response", "value": "{'email': 'jharo@myandex.ru', 'password': 'swcitsnshb', 'name': 'xipqfszvwl'}"}], "start": 1737578860020, "stop": 1737578860020}, {"name": "Получение пароля для авторизации из сгенерированных данных", "status": "passed", "parameters": [{"name": "user_response", "value": "{'email': 'jharo@myandex.ru', 'password': 'swcitsnshb', 'name': 'xipqfszvwl'}"}], "start": 1737578860020, "stop": 1737578860020}, {"name": "Клик по кнопке 'Личный кабинет' в шапке страницы", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression (//a[@class = 'AppHeader_header__link__3D_hX' and @href='/account'] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '(//a[@class = 'AppHeader_header__link__3D_hX' and @href='/account']' is not a valid XPath expression.\n  (Session info: chrome=132.0.6834.83); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF73D65CC05+28741]\n\t(No symbol) [0x00007FF73D5BFED0]\n\t(No symbol) [0x00007FF73D454FBA]\n\t(No symbol) [0x00007FF73D45BC0C]\n\t(No symbol) [0x00007FF73D45E95C]\n\t(No symbol) [0x00007FF73D45EA2F]\n\t(No symbol) [0x00007FF73D4A8B05]\n\t(No symbol) [0x00007FF73D4A948C]\n\t(No symbol) [0x00007FF73D4F3267]\n\t(No symbol) [0x00007FF73D4CFE6F]\n\t(No symbol) [0x00007FF73D4EFFE1]\n\t(No symbol) [0x00007FF73D4CFBD3]\n\t(No symbol) [0x00007FF73D499F43]\n\t(No symbol) [0x00007FF73D49B2D1]\n\tGetHandleVerifier [0x00007FF73D98DE3D+3375741]\n\tGetHandleVerifier [0x00007FF73D9A096A+3452330]\n\tGetHandleVerifier [0x00007FF73D99671D+3410781]\n\tGetHandleVerifier [0x00007FF73D72653B+854395]\n\t(No symbol) [0x00007FF73D5CBE0F]\n\t(No symbol) [0x00007FF73D5C7714]\n\t(No symbol) [0x00007FF73D5C78AD]\n\t(No symbol) [0x00007FF73D5B6189]\n\tBaseThreadInitThunk [0x00007FFA81657374+20]\n\tRtlUserThreadStart [0x00007FFA81D3CC91+33]\n\n", "trace": "  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\Diplom3\\pages\\main_page.py\", line 71, in click_account_button\n    account_button = self.wait_and_find_element(MainPageLocators.BUTTON_ACCOUNT)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\Diplom3\\pages\\base_page.py\", line 11, in wait_and_find_element\n    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located(locator))\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 156, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 770, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\User\\PycharmProjects\\Diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1737578860020, "stop": 1737578860067}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1737578857793, "stop": 1737578860070, "uuid": "ee0821c7-55c9-439f-8eb2-56882a45b346", "historyId": "400a74e7e26bc4667c447344d0482a99", "testCaseId": "f111b9250a760fda946565ad2c99579b", "fullName": "tests.test_personal_account_page.TestPersonalAccountPage#test_redirect_to_order_history_page_success", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_personal_account_page"}, {"name": "subSuite", "value": "TestPersonalAccountPage"}, {"name": "host", "value": "01ms32"}, {"name": "thread", "value": "26028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_personal_account_page"}]}